var e={render(e){return e("div",{class:"yandex-clusterer_not-used-dom-element"},[this.$slots.default])},props:{gridSize:{type:Number,default:64,validater:e=>e%2==0},groupByCoordinates:{type:Boolean,default:!1},hasBalloon:{type:Boolean,default:!0},hasHint:{type:Boolean,default:!0},margin:{type:Array,default:()=>[],validator(e){for(let t of e)if(Number.isNaN(t))return!1;return!0}},maxZoom:{type:Number,default:1/0},minClusterSize:{type:Number,default:2,validator:e=>e>0},preset:{type:String},showInAlphabeticalOrder:{type:Boolean,default:!1},useMapMargin:{type:Boolean,default:!0},viewportMargin:{type:Number,default:128},zoomMargin:{type:Number,default:0}},methods:{async getGeoObject(e){let t=new e.Clusterer({gridSize:this.gridSize,groupByCoordinates:this.groupByCoordinates,hasBalloon:this.hasBalloon,hasHint:this.hasHint,margin:this.margin,maxZoom:this.maxZoom,minClusterSize:this.minClusterSize,preset:this.preset,showInAlphabeticalOrder:this.showInAlphabeticalOrder,useMapMargin:this.useMapMargin,viewportMargin:this.viewportMargin,zoomMargin:this.zoomMargin}),a=[];for(let e of this.$children)a.push(e.getGeoObject());let r=await Promise.all(a);for(let e of r)t.add(e);return t}}};export default e;
